name: Query Review Bot

on:
  pull_request:
    types:
      - labeled

permissions:
  pull-requests: write
  contents: read

jobs:
  review-query:
    if: github.event.label.name == 'question'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Get Modified queries.md Files
        id: get_files
        run: |
          MODIFIED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}..HEAD | grep 'queries.md' || echo "")
          echo "files=$MODIFIED_FILES" >> $GITHUB_ENV

      - name: Extract First SQL Query
        id: extract_query
        run: |
          QUERY=""
          for FILE in ${{ env.files }}; do
            QUERY=$(awk '/^### / {if (found) exit; found=1; next} found && NF' "$FILE" | sed '/^```sql/,/^```/!d;//d')
            if [[ ! -z "$QUERY" ]]; then
              break
            fi
          done
          echo "query=$(echo "$QUERY" | jq -sRr @json)" >> $GITHUB_ENV

      - name: Generate AI Suggestions with OpenAI
        id: ai_suggestions
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [[ -z "${{ env.query }}" ]]; then
            echo "response=No SQL query found in modified files." >> $GITHUB_ENV
            exit 0
          fi

          PAYLOAD=$(jq -n \
            --arg model "gpt-4o-mini" \
            --arg sys_content "You are an SQL query reviewer specializing in DuckDB." \
            --arg user_content "Please provide suggestions for improving the following SQL query, including title clarity, query structure, and optimizations, in 3-5 sentences:\n\n${{ env.query }}" \
            '{
              model: $model,
              messages: [
                { role: "system", content: $sys_content },
                { role: "user", content: $user_content }
              ],
              temperature: 0.7
            }')

          RESPONSE_RAW=$(curl -s -X POST "https://api.openai.com/v1/chat/completions" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD")

          RESPONSE=$(echo "$RESPONSE_RAW" | jq -r '.choices[0].message.content // "Error: No response received."')
          echo "response=$(echo "$RESPONSE" | jq -sRr @json)" >> $GITHUB_ENV

      - name: Comment on PR
        run: |
          if [[ -z "${{ env.response }}" || "${{ env.response }}" == "Error: No response received." ]]; then
            echo "No AI suggestions to post."
            exit 0
          fi

          COMMENT="### ðŸ¤– Query Review Bot\n\n**Suggestions:**\n${{ env.response }}"
          gh pr comment ${{ github.event.pull_request.html_url }} --body "$COMMENT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
